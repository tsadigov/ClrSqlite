<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="X:\Garage\ClrSqlite\Community.CsharpSqlite.shell\bin\Debug\C#-SQLite3.1.exe">
   <Modules>
    <Module Name="c#-sqlite3.1.exe">
     <Namespaces>
      <Namespace Name="Community.CsharpSqlite">
       <Types>
        <Type Name="Sqlite3" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#codec_cipher(Community.CsharpSqlite.Sqlite3+cipher_ctx,System.UInt32,System.Int32,System.Int32,System.Byte[],System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="crypto.cs" Line="343">Object 'dataStream' can be disposed more than once in method 'Sqlite3.codec_cipher(Sqlite3.cipher_ctx, uint, int, int, byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 343</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getReadLock(Community.CsharpSqlite.Sqlite3+sqlite3_file)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1386">Method 'Sqlite3.getReadLock(Sqlite3.sqlite3_file)' called GetLastWin32Error but the immediately preceding call to 'Sqlite3.LockingStrategy.SharedLockFile(Sqlite3.sqlite3_file, long, long)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#seekWinFile(Community.CsharpSqlite.Sqlite3+sqlite3_file,System.Int64)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="954">Method 'Sqlite3.seekWinFile(Sqlite3.sqlite3_file, long)' called GetLastWin32Error but the immediately preceding call to 'Stream.Seek(long, SeekOrigin)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#unlockReadLock(Community.CsharpSqlite.Sqlite3+sqlite3_file)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1429">Method 'Sqlite3.unlockReadLock(Sqlite3.sqlite3_file)' called GetLastWin32Error but the immediately preceding call to 'Debugger.Break()' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#winDelete(Community.CsharpSqlite.Sqlite3+sqlite3_vfs,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="3274">Method 'Sqlite3.winDelete(Sqlite3.sqlite3_vfs, string, int)' called GetLastWin32Error but the immediately preceding call to 'Thread.Sleep(int)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#winLock(Community.CsharpSqlite.Sqlite3+sqlite3_file,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1605">Method 'Sqlite3.winLock(Sqlite3.sqlite3_file, int)' called GetLastWin32Error but the immediately preceding call to 'Marshal.GetLastWin32Error()' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1595">Method 'Sqlite3.winLock(Sqlite3.sqlite3_file, int)' called GetLastWin32Error but the immediately preceding call to 'Sqlite3.LockingStrategy.LockFile(Sqlite3.sqlite3_file, long, long)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1647">Method 'Sqlite3.winLock(Sqlite3.sqlite3_file, int)' called GetLastWin32Error but the immediately preceding call to 'Sqlite3.LockingStrategy.LockFile(Sqlite3.sqlite3_file, long, long)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1572">Method 'Sqlite3.winLock(Sqlite3.sqlite3_file, int)' called GetLastWin32Error but the immediately preceding call to 'Sqlite3.getReadLock(Sqlite3.sqlite3_file)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1552">Method 'Sqlite3.winLock(Sqlite3.sqlite3_file, int)' called GetLastWin32Error but the immediately preceding call to 'Thread.Sleep(int)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#winOpen(Community.CsharpSqlite.Sqlite3+sqlite3_vfs,System.String,Community.CsharpSqlite.Sqlite3+sqlite3_file,System.Int32,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="3099">Method 'Sqlite3.winOpen(Sqlite3.sqlite3_vfs, string, Sqlite3.sqlite3_file, int, out int)' called GetLastWin32Error but the immediately preceding call to 'FileStream.SafeFileHandle.get()' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#winRead(Community.CsharpSqlite.Sqlite3+sqlite3_file,System.Byte[],System.Int32,System.Int64)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1077">Method 'Sqlite3.winRead(Sqlite3.sqlite3_file, byte[], int, long)' called GetLastWin32Error but the immediately preceding call to 'Stream.Read(byte[], int, int)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#winTruncate(Community.CsharpSqlite.Sqlite3+sqlite3_file,System.Int64)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1240">Method 'Sqlite3.winTruncate(Sqlite3.sqlite3_file, long)' called GetLastWin32Error but the immediately preceding call to 'Stream.SetLength(long)' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#winWrite(Community.CsharpSqlite.Sqlite3+sqlite3_file,System.Byte[],System.Int32,System.Int64)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="x:\Garage\ClrSqlite\Community.CsharpSqlite\src" File="os_win_c.cs" Line="1168">Method 'Sqlite3.winWrite(Sqlite3.sqlite3_file, byte[], int, long)' called GetLastWin32Error but the immediately preceding call to 'Stream.Position.get()' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Sqlite3+LockingStrategy" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#LockFileEx(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Threading.NativeOverlapped&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-12-30 00:32:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Sqlite3.LockingStrategy.LockFileEx(IntPtr, uint, uint, uint, uint, ref NativeOverlapped)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404">
   <Name>Call GetLastError immediately after P/Invoke</Name>
   <Description>The last Win32 error can be reset as a result of making managed calls, due to P/Invokes called by the runtime itself. In order to ensure the correctness of the value returned by GetLastWin32Error, place the call immediately after the relevant platform invoke call in your code.</Description>
   <Resolution Name="Default">Method {0} called GetLastWin32Error but the immediately preceding call to {1} is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182199.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 343</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
